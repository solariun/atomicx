<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_atomicx_8hpp" xml:lang="en-US">
<title>atomicx/atomicx.hpp File Reference</title>
<indexterm><primary>atomicx/atomicx.hpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;stdint.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;setjmp.h&gt;
</programlisting><simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classthread_1_1atomicx">thread::atomicx</link></para>
</listitem>
            <listitem><para>class <link linkend="_classthread_1_1atomicx_1_1_timeout">thread::atomicx::Timeout</link></para>

<para><link linkend="_classthread_1_1atomicx_1_1_timeout">Timeout</link> Check object. </para>
</listitem>
            <listitem><para>class <link linkend="_classthread_1_1atomicx_1_1aiterator">thread::atomicx::aiterator</link></para>
</listitem>
            <listitem><para>class <link linkend="_classthread_1_1atomicx_1_1smart__ptr">thread::atomicx::smart_ptr&lt; T &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_classthread_1_1atomicx_1_1queue">thread::atomicx::queue&lt; T &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_classthread_1_1atomicx_1_1queue_1_1_q_item">thread::atomicx::queue&lt; T &gt;::QItem</link></para>

<para>Queue Item object. </para>
</listitem>
            <listitem><para>class <link linkend="_classthread_1_1atomicx_1_1semaphore">thread::atomicx::semaphore</link></para>
</listitem>
            <listitem><para>class <link linkend="_classthread_1_1atomicx_1_1smart_semaphore">thread::atomicx::smartSemaphore</link></para>
</listitem>
            <listitem><para>class <link linkend="_classthread_1_1atomicx_1_1mutex">thread::atomicx::mutex</link></para>
</listitem>
            <listitem><para>class <link linkend="_classthread_1_1atomicx_1_1smart_mutex">thread::atomicx::smartMutex</link></para>

<para>RII compliance lock/shared lock to auto unlock on destruction. </para>
</listitem>
            <listitem><para>struct <link linkend="_structthread_1_1atomicx_1_1_message">thread::atomicx::Message</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespacethread">thread</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_atomicx_8hpp_1a6709a36e8f5c263de8fa27d54af04351">ATOMICX_VERSION</link>   &quot;1.2.1&quot;</para>
</listitem>
            <listitem><para>#define <link linkend="_atomicx_8hpp_1a9d360e18456ac266a0f910a16b076727">ATOMIC_VERSION_LABEL</link>   &quot;AtomicX v&quot; ATOMICX_VERSION &quot; built at &quot; __TIMESTAMP__</para>
</listitem>
            <listitem><para>#define <link linkend="_atomicx_8hpp_1a5f79904e0c0abe4f6120ed97f66b3802">ATOMICX_TIME_MAX</link>   ((<link linkend="_atomicx_8hpp_1a920b9cf8bd44e31bfb1bfdf4cb1c9080">atomicx_time</link>) ~0)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>using <link linkend="_atomicx_8hpp_1a920b9cf8bd44e31bfb1bfdf4cb1c9080">atomicx_time</link> = uint32_t</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_atomicx_8hpp_1a7cb51f5c2b5cad3766f19eb69c92793b">yield</link> (void)</para>
</listitem>
            <listitem><para><link linkend="_atomicx_8hpp_1a920b9cf8bd44e31bfb1bfdf4cb1c9080">atomicx_time</link> <link linkend="_atomicx_8hpp_1acba4f7fe589a5ea034da546e90039207">Atomicx_GetTick</link> (void)</para>

<para>Implement the custom Tick acquisition. </para>
</listitem>
            <listitem><para>void <link linkend="_atomicx_8hpp_1a965c93519ae7ab7036d1acaae0ae025a">Atomicx_SleepTick</link> (<link linkend="_atomicx_8hpp_1a920b9cf8bd44e31bfb1bfdf4cb1c9080">atomicx_time</link> nSleep)</para>

<para>Implement a custom sleep, usually based in the same GetTick granularity. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_atomicx_8hpp_1a9d360e18456ac266a0f910a16b076727"/><section>
    <title>ATOMIC_VERSION_LABEL</title>
<indexterm><primary>ATOMIC_VERSION_LABEL</primary><secondary>atomicx.hpp</secondary></indexterm>
<indexterm><primary>atomicx.hpp</primary><secondary>ATOMIC_VERSION_LABEL</secondary></indexterm>
<para><computeroutput>#define ATOMIC_VERSION_LABEL   &quot;AtomicX v&quot; ATOMICX_VERSION &quot; built at &quot; __TIMESTAMP__</computeroutput></para></section>
<anchor xml:id="_atomicx_8hpp_1a5f79904e0c0abe4f6120ed97f66b3802"/><section>
    <title>ATOMICX_TIME_MAX</title>
<indexterm><primary>ATOMICX_TIME_MAX</primary><secondary>atomicx.hpp</secondary></indexterm>
<indexterm><primary>atomicx.hpp</primary><secondary>ATOMICX_TIME_MAX</secondary></indexterm>
<para><computeroutput>#define ATOMICX_TIME_MAX   ((<link linkend="_atomicx_8hpp_1a920b9cf8bd44e31bfb1bfdf4cb1c9080">atomicx_time</link>) ~0)</computeroutput></para></section>
<anchor xml:id="_atomicx_8hpp_1a6709a36e8f5c263de8fa27d54af04351"/><section>
    <title>ATOMICX_VERSION</title>
<indexterm><primary>ATOMICX_VERSION</primary><secondary>atomicx.hpp</secondary></indexterm>
<indexterm><primary>atomicx.hpp</primary><secondary>ATOMICX_VERSION</secondary></indexterm>
<para><computeroutput>#define ATOMICX_VERSION   &quot;1.2.1&quot;</computeroutput></para></section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_atomicx_8hpp_1a920b9cf8bd44e31bfb1bfdf4cb1c9080"/><section>
    <title>atomicx_time</title>
<indexterm><primary>atomicx_time</primary><secondary>atomicx.hpp</secondary></indexterm>
<indexterm><primary>atomicx.hpp</primary><secondary>atomicx_time</secondary></indexterm>
<para><computeroutput>using <link linkend="_atomicx_8hpp_1a920b9cf8bd44e31bfb1bfdf4cb1c9080">atomicx_time</link> =  uint32_t</computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_atomicx_8hpp_1acba4f7fe589a5ea034da546e90039207"/><section>
    <title>Atomicx_GetTick()</title>
<indexterm><primary>Atomicx_GetTick</primary><secondary>atomicx.hpp</secondary></indexterm>
<indexterm><primary>atomicx.hpp</primary><secondary>Atomicx_GetTick</secondary></indexterm>
<para><computeroutput><link linkend="_atomicx_8hpp_1a920b9cf8bd44e31bfb1bfdf4cb1c9080">atomicx_time</link> Atomicx_GetTick (void )</computeroutput></para><para>

<para>Implement the custom Tick acquisition. </para>
</para>

<para><formalpara><title>Returns</title>

<para>atomicx_time </para>
</formalpara>
</para>
</section>
<anchor xml:id="_atomicx_8hpp_1a965c93519ae7ab7036d1acaae0ae025a"/><section>
    <title>Atomicx_SleepTick()</title>
<indexterm><primary>Atomicx_SleepTick</primary><secondary>atomicx.hpp</secondary></indexterm>
<indexterm><primary>atomicx.hpp</primary><secondary>Atomicx_SleepTick</secondary></indexterm>
<para><computeroutput>void Atomicx_SleepTick (<link linkend="_atomicx_8hpp_1a920b9cf8bd44e31bfb1bfdf4cb1c9080">atomicx_time</link> nSleep)</computeroutput></para><para>

<para>Implement a custom sleep, usually based in the same GetTick granularity. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>nSleep</entry><entry>
<para>How long custom tick to wait</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <note><title>Note</title>

<para>This function is particularly special, since it give freedom to tweak the processor power consuption if necessary </para>
</note>
</para>
</section>
<anchor xml:id="_atomicx_8hpp_1a7cb51f5c2b5cad3766f19eb69c92793b"/><section>
    <title>yield()</title>
<indexterm><primary>yield</primary><secondary>atomicx.hpp</secondary></indexterm>
<indexterm><primary>atomicx.hpp</primary><secondary>yield</secondary></indexterm>
<para><computeroutput>void yield (void )</computeroutput></para></section>
</section>
</section>
